==78341== Memcheck, a memory error detector
==78341== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==78341== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==78341== Command: ./build/app/shell-app
==78341== 
Averaged sensor reading: 10
==78341== Conditional jump or move depends on uninitialised value(s)
==78341==    at 0x109DCF: main (in /home/shivam/Shunya/Root/umd-coursework/Software-Development-Robotics/Course-Repos/Valgrind/cpp-boilerplate-v2/build/app/shell-app)
==78341== 
==78341== 
==78341== HEAP SUMMARY:
==78341==     in use at exit: 44 bytes in 2 blocks
==78341==   total heap usage: 4 allocs, 2 frees, 76,844 bytes allocated
==78341== 
==78341== LEAK SUMMARY:
==78341==    definitely lost: 24 bytes in 1 blocks
==78341==    indirectly lost: 20 bytes in 1 blocks
==78341==      possibly lost: 0 bytes in 0 blocks
==78341==    still reachable: 0 bytes in 0 blocks
==78341==         suppressed: 0 bytes in 0 blocks
==78341== Rerun with --leak-check=full to see details of leaked memory
==78341== 
==78341== Use --track-origins=yes to see where uninitialised values come from
==78341== For lists of detected and suppressed errors, rerun with: -s
==78341== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

After correcting the conditional jump or move depends on uninitialised values error. By initializing the bool variable in the app/main.cpp

==82331== Memcheck, a memory error detector
==82331== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==82331== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==82331== Command: ./build/app/shell-app
==82331== 
Averaged sensor reading: 10
DONE
==82331== 
==82331== HEAP SUMMARY:
==82331==     in use at exit: 44 bytes in 2 blocks
==82331==   total heap usage: 4 allocs, 2 frees, 76,844 bytes allocated
==82331== 
==82331== LEAK SUMMARY:
==82331==    definitely lost: 24 bytes in 1 blocks
==82331==    indirectly lost: 20 bytes in 1 blocks
==82331==      possibly lost: 0 bytes in 0 blocks
==82331==    still reachable: 0 bytes in 0 blocks
==82331==         suppressed: 0 bytes in 0 blocks
==82331== Rerun with --leak-check=full to see details of leaked memory
==82331== 
==82331== For lists of detected and suppressed errors, rerun with: -s
==82331== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
